#!/usr/bin/env python
import sys

del19region = '7:55242415-55242513'
del19accs = [x.strip() for x in '''SRR12100751
SRR12100757
SRR12100759
SRR12100762
SRR12100768
SRR12100769
SRR12100770
SRR12100771
SRR12100777
SRR12100781
SRR12100788
SRR12100798
SRR12100817
SRR12100818
SRR12100819
SRR12100830
SRR12100838
SRR12100852
SRR12100854
SRR12100862
SRR12100864
SRR12100869
SRR12100879
SRR12100883
SRR12100886
SRR12100889
SRR12100895
SRR12100918
SRR12100932
SRR12100940
SRR12100945
SRR12100965
SRR12100986
SRR12100990
SRR12101011
'''.strip().split()]

ins20region = '7:55248986-55249171'
ins20accs = [x.strip() for x in '''SRR12100960
SRR12100967
SRR12100927
SRR12100997
SRR12100844
SRR12100802
'''.strip().split()]

def main():
    #del19region=sys.argv[1]
    #ins20region=sys.argv[2]
    pchroms = [x.split(':')[0] for x in [del19region, ins20region]]
    pbegs = [int(x.split(':')[1].split('-')[0]) for x in [del19region, ins20region]]
    pends = [int(x.split(':')[1].split('-')[1]) for x in [del19region, ins20region]]
    
    sample = sys.argv[1].strip()
    del19candidates = []
    ins20candidates = []
    for line in sys.stdin:
        if line.startswith('#'): 
            #if line.startswith('#CHROM\t'):
            #    sample = line.strip().split('\t')[-1]
            print(line.strip())
        else:
            tokens = line.strip().split()
            chrom, pos, qual = (tokens[0], int(tokens[1]), float(tokens[5]))
            if ((chrom == pchroms[0]) and (pbegs[0] <= pos) and (pos < pends[0]) and (sample in del19accs)):
                del19candidates.append((qual, line.strip()))
            if ((chrom == pchroms[1]) and (pbegs[1] <= pos) and (pos < pends[1]) and (sample in ins20accs)):
                ins20candidates.append((qual, line.strip()))
    if sample in del19accs: 
        if del19candidates:
            #assert (del19candidates), ('Error, some variant calls (each one can be either false positive or false negative) ' + 
            #    'must have been generated by UVC-delins for sample {} of type EGFR-exon19-deletion. '.format(sample))
            print(sorted(del19candidates)[-1][1])
        else:
            sys.stderr.write('========== Error ======== \nSome variant calls (each one can be either false positive or false negative) ' + 
                'must have been generated by UVC-delins for sample {} of type EGFR-exon19-deletion. \n'.format(sample))
    if sample in ins20accs: 
        assert (ins20candidates), ('Error, some variant calls (each one can be either false positive or false negative) ' + 
            'must have been generated by UVC-delins for sample {} of type EGFR-exon20-insertion. '.format(sample))
        print(sorted(ins20candidates)[-1][1])
    
if __name__ == '__main__':
    main()
    
